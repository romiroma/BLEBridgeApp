//
//  BLESerial.iig
//  BLESerial
//
//  Created by Roman on 27.06.2023.
//

#ifndef BLESerial_h
#define BLESerial_h

#include <Availability.h>
#include <DriverKit/IOService.iig>
#include <SerialDriverKit/IOUserSerial.iig>

class BLESerial: public IOUserSerial
{
public:
    virtual bool init(void) override;
    virtual void free(void) override;
    virtual bool initWith(IOBufferMemoryDescriptor *ifmd) override;
    virtual kern_return_t Start(IOService * provider) override;
    virtual kern_return_t Stop(IOService *provider) override;

    virtual kern_return_t HwActivate(void) override;
    virtual kern_return_t HwDeactivate(void) override;
    virtual void TxDataAvailable(void) override;
    virtual void RxFreeSpaceAvailable(void) override;
    virtual kern_return_t HwResetFIFO(bool tx, bool rx) override;
    virtual kern_return_t HwSendBreak(bool sendBreak) override;
    virtual kern_return_t HwProgramUART(uint32_t baudRate, uint8_t nDataBits, uint8_t nHalfStopBits, uint8_t parity) override;
    virtual kern_return_t HwProgramBaudRate(uint32_t baudRate) override;
    virtual kern_return_t HwProgramMCR(bool dtr, bool rts) override;
    virtual kern_return_t HwGetModemStatus(bool *cts, bool *dsr, bool *ri, bool *dcd) override;
    virtual kern_return_t HwProgramLatencyTimer(uint32_t latency) override;
    virtual kern_return_t HwProgramFlowControl(uint32_t arg, uint8_t xon, uint8_t xoff) override;
};

#endif /* BLESerial_h */
